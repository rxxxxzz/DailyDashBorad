[
  {
    "name": "ml-from-scratch",
    "full_name": "mstrYoda/ml-from-scratch",
    "description": "A comprehensive collection of practical machine learning examples using popular frameworks and libraries.",
    "url": "https://github.com/mstrYoda/ml-from-scratch",
    "stars": 115,
    "daily_stars": 1,
    "language": "Python",
    "topics": [
      "llm",
      "machine-learning",
      "matplotlib",
      "numpy",
      "pandas",
      "python",
      "pytorch",
      "sklearn"
    ],
    "created_at": "2025-02-05T11:25:00",
    "updated_at": "2025-02-10T05:31:51"
  },
  {
    "name": "hl-gauss-pytorch",
    "full_name": "lucidrains/hl-gauss-pytorch",
    "description": "The proposed Gaussian Histogram Loss (HL-Gauss) proposed by Imani et al. with a few convenient wrappers for regression, in Pytorch",
    "url": "https://github.com/lucidrains/hl-gauss-pytorch",
    "stars": 47,
    "daily_stars": 0,
    "language": "Python",
    "topics": [
      "artificial-intelligence",
      "deep-learning",
      "regression-as-classification",
      "reinforcement-learning"
    ],
    "created_at": "2025-02-06T17:04:44",
    "updated_at": "2025-02-09T16:19:01"
  },
  {
    "name": "hl-gauss-pytorch",
    "full_name": "lucidrains/hl-gauss-pytorch",
    "description": "The proposed Gaussian Histogram Loss (HL-Gauss) proposed by Imani et al. with a few convenient wrappers for regression, in Pytorch",
    "url": "https://github.com/lucidrains/hl-gauss-pytorch",
    "stars": 47,
    "daily_stars": 0,
    "language": "Python",
    "topics": [
      "artificial-intelligence",
      "deep-learning",
      "regression-as-classification",
      "reinforcement-learning"
    ],
    "created_at": "2025-02-06T17:04:44",
    "updated_at": "2025-02-09T16:19:01"
  },
  {
    "name": "improving-transformers-world-model-for-rl",
    "full_name": "lucidrains/improving-transformers-world-model-for-rl",
    "description": "Implementation of the new SOTA for model based RL, from the paper \"Improving Transformer World Models for Data-Efficient RL\", in Pytorch",
    "url": "https://github.com/lucidrains/improving-transformers-world-model-for-rl",
    "stars": 24,
    "daily_stars": 5,
    "language": null,
    "topics": [
      "artificial-intelligence",
      "attention-mechanism",
      "deep-learning",
      "model-based-reinforcement-learning",
      "transformers",
      "world-models"
    ],
    "created_at": "2025-02-09T15:00:51",
    "updated_at": "2025-02-10T07:11:33"
  },
  {
    "name": "improving-transformers-world-model-for-rl",
    "full_name": "lucidrains/improving-transformers-world-model-for-rl",
    "description": "Implementation of the new SOTA for model based RL, from the paper \"Improving Transformer World Models for Data-Efficient RL\", in Pytorch",
    "url": "https://github.com/lucidrains/improving-transformers-world-model-for-rl",
    "stars": 24,
    "daily_stars": 0,
    "language": null,
    "topics": [
      "artificial-intelligence",
      "attention-mechanism",
      "deep-learning",
      "model-based-reinforcement-learning",
      "transformers",
      "world-models"
    ],
    "created_at": "2025-02-09T15:00:51",
    "updated_at": "2025-02-10T07:11:33"
  },
  {
    "name": "focalcodec",
    "full_name": "lucadellalib/focalcodec",
    "description": "A low-bitrate single-codebook 16 kHz speech codec based on focal modulation",
    "url": "https://github.com/lucadellalib/focalcodec",
    "stars": 23,
    "daily_stars": 19,
    "language": "Python",
    "topics": [
      "codec",
      "deep-learning",
      "focal-modulation",
      "neural-speech-coding",
      "pytorch",
      "speech-synthesis",
      "vector-quantization",
      "vocos",
      "wavlm"
    ],
    "created_at": "2025-02-03T09:03:40",
    "updated_at": "2025-02-10T08:37:57"
  },
  {
    "name": "LiuMotion",
    "full_name": "Novecento99/LiuMotion",
    "description": "LiuMotion is a framework that let you use a image generation neural network in real time.",
    "url": "https://github.com/Novecento99/LiuMotion",
    "stars": 19,
    "daily_stars": 2,
    "language": "Python",
    "topics": [
      "analisys",
      "art",
      "artificial-intelligence",
      "biggan",
      "framework",
      "gan",
      "music",
      "neural-network",
      "pytorch",
      "real-time"
    ],
    "created_at": "2025-02-07T13:28:24",
    "updated_at": "2025-02-10T08:26:37"
  },
  {
    "name": "RAG-LangChain-AI-System",
    "full_name": "hoangsonww/RAG-LangChain-AI-System",
    "description": "ðŸ§  This repository features a Retrieval-Augmented Generation (RAG) system powered by LangChain, FAISS, Hugging Face, and Ollama, running in Google Colab for portfolio support. It integrates document retrieval, dynamic entity extraction, and external API calls to generate context-aware responses with an interactive AI assistant.",
    "url": "https://github.com/hoangsonww/RAG-LangChain-AI-System",
    "stars": 16,
    "daily_stars": 0,
    "language": "Jupyter Notebook",
    "topics": [
      "bert",
      "expressjs",
      "faiss",
      "flask",
      "google-colab",
      "huggingface",
      "langchain",
      "langchain-python",
      "language-model",
      "llama2",
      "llm",
      "machine-learning",
      "ngrok",
      "ollama",
      "ollama-api",
      "python",
      "rag",
      "retrieval-augmented-generation",
      "transformers",
      "typescript"
    ],
    "created_at": "2025-02-05T00:55:45",
    "updated_at": "2025-02-07T18:19:27"
  },
  {
    "name": "manifold",
    "full_name": "intelligencedev/manifold",
    "description": "Manifold is a platform for enabling workflow automation using AI assistants.",
    "url": "https://github.com/intelligencedev/manifold",
    "stars": 9,
    "daily_stars": 0,
    "language": "Vue",
    "topics": [
      "artificial-intelligence",
      "automation",
      "go",
      "visual-coding",
      "vuejs"
    ],
    "created_at": "2025-02-04T23:28:34",
    "updated_at": "2025-02-10T00:41:06"
  },
  {
    "name": "local-rag-researcher-deepseek",
    "full_name": "kaymen99/local-rag-researcher-deepseek",
    "description": "Local RAG researcher agent built using Langgraph, DeepSeek R1 and Ollama",
    "url": "https://github.com/kaymen99/local-rag-researcher-deepseek",
    "stars": 9,
    "daily_stars": 2,
    "language": "Python",
    "topics": [
      "ai-agents",
      "deepseek-r1",
      "langchain",
      "langgraph",
      "ollama",
      "rag",
      "rag-agents",
      "research-assistant"
    ],
    "created_at": "2025-02-06T23:31:15",
    "updated_at": "2025-02-10T06:29:22"
  }
]