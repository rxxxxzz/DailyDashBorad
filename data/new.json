[
  {
    "name": "solana-ai-agent",
    "full_name": "kratos-te/solana-ai-agent",
    "description": "AI agent connect on Solana using langchain",
    "url": "https://github.com/kratos-te/solana-ai-agent",
    "stars": 186,
    "daily_stars": 26,
    "language": "TypeScript",
    "topics": [
      "ai-agent",
      "ai-agents",
      "langchain",
      "langchain-js",
      "solana-ai-agent"
    ],
    "created_at": "2025-01-22T06:02:50",
    "updated_at": "2025-01-26T12:49:42"
  },
  {
    "name": "Solana-AI-Agent-DApp",
    "full_name": "soladity/Solana-AI-Agent-DApp",
    "description": "AI Agent built on Solana Blockchain",
    "url": "https://github.com/soladity/Solana-AI-Agent-DApp",
    "stars": 130,
    "daily_stars": 3,
    "language": "TypeScript",
    "topics": [
      "ai",
      "ai-agents",
      "blockchain",
      "social-network",
      "solana"
    ],
    "created_at": "2025-01-23T17:24:40",
    "updated_at": "2025-01-26T11:33:34"
  },
  {
    "name": "crypto-aml-check",
    "full_name": "AMLChecker/crypto-aml-check",
    "description": "AML Checker detection and analysis tools for cryptocurrency transactions using machine learning and blockchain data. Ensuring compliance and reducing money laundering risks.",
    "url": "https://github.com/AMLChecker/crypto-aml-check",
    "stars": 50,
    "daily_stars": 1,
    "language": null,
    "topics": [
      "aml",
      "anti-money-laundering",
      "blockchain",
      "blockchain-security",
      "compliance",
      "crypto-aml",
      "crypto-analysis",
      "crypto-monitoring",
      "crypto-security",
      "financial-crimes",
      "fraud-detection",
      "machine-learning",
      "risk-detection",
      "transaction-analysis"
    ],
    "created_at": "2025-01-23T10:19:10",
    "updated_at": "2025-01-26T10:37:53"
  },
  {
    "name": "mind-evolution-pytorch",
    "full_name": "lucidrains/mind-evolution-pytorch",
    "description": "Implementation of Mind Evolution, Evolving Deeper LLM Thinking, from Deepmind, in Pytorch",
    "url": "https://github.com/lucidrains/mind-evolution-pytorch",
    "stars": 31,
    "daily_stars": 0,
    "language": "Python",
    "topics": [
      "artificial-intelligence",
      "attention",
      "deep-learning",
      "evolutionary-algorithms",
      "genetic-algorithms",
      "transformers"
    ],
    "created_at": "2025-01-20T13:32:44",
    "updated_at": "2025-01-25T14:22:02"
  },
  {
    "name": "mind-evolution-pytorch",
    "full_name": "lucidrains/mind-evolution-pytorch",
    "description": "Implementation of Mind Evolution, Evolving Deeper LLM Thinking, from Deepmind, in Pytorch",
    "url": "https://github.com/lucidrains/mind-evolution-pytorch",
    "stars": 31,
    "daily_stars": 0,
    "language": "Python",
    "topics": [
      "artificial-intelligence",
      "attention",
      "deep-learning",
      "evolutionary-algorithms",
      "genetic-algorithms",
      "transformers"
    ],
    "created_at": "2025-01-20T13:32:44",
    "updated_at": "2025-01-25T14:22:02"
  },
  {
    "name": "GAF-microbatch-pytorch",
    "full_name": "lucidrains/GAF-microbatch-pytorch",
    "description": "Implementation of Gradient Agreement Filtering, from Chaubard et al. of Stanford, but for single machine microbatches, in Pytorch",
    "url": "https://github.com/lucidrains/GAF-microbatch-pytorch",
    "stars": 21,
    "daily_stars": 0,
    "language": "Python",
    "topics": [
      "artificial-intelligence",
      "deep-learning",
      "gradient-filtering",
      "label-noise",
      "robustness"
    ],
    "created_at": "2025-01-18T16:25:52",
    "updated_at": "2025-01-22T12:24:46"
  },
  {
    "name": "GAF-microbatch-pytorch",
    "full_name": "lucidrains/GAF-microbatch-pytorch",
    "description": "Implementation of Gradient Agreement Filtering, from Chaubard et al. of Stanford, but for single machine microbatches, in Pytorch",
    "url": "https://github.com/lucidrains/GAF-microbatch-pytorch",
    "stars": 21,
    "daily_stars": 0,
    "language": "Python",
    "topics": [
      "artificial-intelligence",
      "deep-learning",
      "gradient-filtering",
      "label-noise",
      "robustness"
    ],
    "created_at": "2025-01-18T16:25:52",
    "updated_at": "2025-01-22T12:24:46"
  },
  {
    "name": "Multiplex-CoT",
    "full_name": "data-dream-gdsp/Multiplex-CoT",
    "description": "[arXiv submit/6143322]The Multiplex CoT makes AI more thoughtful.",
    "url": "https://github.com/data-dream-gdsp/Multiplex-CoT",
    "stars": 15,
    "daily_stars": 0,
    "language": "Jupyter Notebook",
    "topics": [
      "api",
      "cot",
      "deep-learning",
      "llm",
      "lrm",
      "orange-ai",
      "prompt-engineering"
    ],
    "created_at": "2025-01-20T01:26:24",
    "updated_at": "2025-01-26T12:42:34"
  },
  {
    "name": "async_torchwindow",
    "full_name": "loryruta/async_torchwindow",
    "description": "An async window to visualize an Image tensor or a Gaussian Splatting scene",
    "url": "https://github.com/loryruta/async_torchwindow",
    "stars": 14,
    "daily_stars": 0,
    "language": "Cuda",
    "topics": [
      "deep-learning",
      "gaussian-splatting",
      "image-processing",
      "pytorch"
    ],
    "created_at": "2025-01-22T20:32:25",
    "updated_at": "2025-01-26T07:00:20"
  },
  {
    "name": "staticvectors",
    "full_name": "neuml/staticvectors",
    "description": "ðŸ”¢ Work with static vector models",
    "url": "https://github.com/neuml/staticvectors",
    "stars": 13,
    "daily_stars": 0,
    "language": "Python",
    "topics": [
      "embeddings",
      "machine-learning",
      "nlp",
      "python",
      "search"
    ],
    "created_at": "2025-01-22T19:24:54",
    "updated_at": "2025-01-26T00:18:41"
  }
]