[
  {
    "name": "WebWalker",
    "full_name": "Alibaba-NLP/WebWalker",
    "description": "üåê WebWalker: Benchmarking LLMs in Web Traversal",
    "url": "https://github.com/Alibaba-NLP/WebWalker",
    "stars": 211,
    "daily_stars": 6,
    "language": "Python",
    "topics": [
      "agent",
      "alibaba",
      "artificial-intelligence",
      "information-seeking",
      "llm",
      "multi-agent",
      "rag",
      "web-agent"
    ],
    "created_at": "2025-01-09T11:07:35",
    "updated_at": "2025-01-23T12:34:29"
  },
  {
    "name": "pilottai",
    "full_name": "anuj0456/pilottai",
    "description": "Python framework for building scalable multi-agent systems with built-in orchestration, LLM integration, and intelligent task processing. Features dynamic scaling, fault tolerance, and advanced load balancing.",
    "url": "https://github.com/anuj0456/pilottai",
    "stars": 10,
    "daily_stars": 6,
    "language": "Python",
    "topics": [
      "agent-framework",
      "ai-framework",
      "artificial-intelligence",
      "async-python",
      "asyncio",
      "autonomous-agents",
      "distributed-systems",
      "fault-tolerance",
      "llm-integration",
      "machine-learning",
      "multi-agent-systems",
      "orchestration",
      "pydantic",
      "python",
      "task-processing"
    ],
    "created_at": "2025-01-19T19:05:40",
    "updated_at": "2025-01-23T12:31:49"
  },
  {
    "name": "titans-pytorch",
    "full_name": "lucidrains/titans-pytorch",
    "description": "Unofficial implementation of Titans, SOTA memory for transformers, in Pytorch",
    "url": "https://github.com/lucidrains/titans-pytorch",
    "stars": 836,
    "daily_stars": 4,
    "language": "Python",
    "topics": [
      "artificial-intelligence",
      "deep-learning",
      "long-term-memory",
      "neural-memory"
    ],
    "created_at": "2025-01-08T15:26:27",
    "updated_at": "2025-01-23T12:35:02"
  },
  {
    "name": "AI-Resources-Central",
    "full_name": "CoderSJX/AI-Resources-Central",
    "description": " Bringing together outstanding artificial intelligence (AI) open source projects from around the world. ",
    "url": "https://github.com/CoderSJX/AI-Resources-Central",
    "stars": 450,
    "daily_stars": 2,
    "language": null,
    "topics": [
      "agent",
      "ai",
      "chatgpt",
      "functioncall",
      "gemini",
      "llm",
      "machine-learning",
      "model",
      "ollama",
      "openai",
      "prompt-engineering",
      "qwen",
      "spring-ai",
      "transformer"
    ],
    "created_at": "2025-01-08T01:44:10",
    "updated_at": "2025-01-23T09:34:21"
  },
  {
    "name": "T6",
    "full_name": "tensorgi/T6",
    "description": "The official implementation of Tensor ProducT ATTenTion Transformer (T6)",
    "url": "https://github.com/tensorgi/T6",
    "stars": 241,
    "daily_stars": 2,
    "language": "Python",
    "topics": [
      "deep-learning",
      "foundation-models",
      "large-language-models",
      "llms",
      "model-architectures",
      "pretraining"
    ],
    "created_at": "2025-01-10T19:30:12",
    "updated_at": "2025-01-23T10:41:00"
  },
  {
    "name": "mind-evolution-pytorch",
    "full_name": "lucidrains/mind-evolution-pytorch",
    "description": "Implementation of Mind Evolution, Evolving Deeper LLM Thinking, from Deepmind, in Pytorch",
    "url": "https://github.com/lucidrains/mind-evolution-pytorch",
    "stars": 29,
    "daily_stars": 1,
    "language": "Python",
    "topics": [
      "artificial-intelligence",
      "attention",
      "deep-learning",
      "evolutionary-algorithms",
      "genetic-algorithms",
      "transformers"
    ],
    "created_at": "2025-01-20T13:32:44",
    "updated_at": "2025-01-23T08:49:51"
  },
  {
    "name": "rl_mcts_intro",
    "full_name": "puyuan1996/rl_mcts_intro",
    "description": "Âº∫ÂåñÂ≠¶‰π† (RL) ‰∏éËíôÁâπÂç°Ê¥õÊ†ëÊêúÁ¥¢ (MCTS) Áõ∏ÂÖ≥Â≠¶‰π†ËµÑÊ∫ê",
    "url": "https://github.com/puyuan1996/rl_mcts_intro",
    "stars": 5,
    "daily_stars": 1,
    "language": null,
    "topics": [
      "artificial-intelligence",
      "awesome",
      "deep-learning",
      "deep-neural-networks",
      "deep-reinforcement-learning",
      "introduction",
      "learning",
      "mcts",
      "monte-carlo-tree-search",
      "ppt",
      "reinforcement-learning",
      "resources",
      "rl",
      "search"
    ],
    "created_at": "2025-01-04T03:41:00",
    "updated_at": "2025-01-23T10:28:11"
  },
  {
    "name": "AI_in_Biomedical_Data",
    "full_name": "Amir-Hofo/AI_in_Biomedical_Data",
    "description": "This educational repository focuses on working with three types of medical data: tabular data, ECG and EEG signals. It provides implementations of machine learning and deep learning models for processing and analyzing these medical data, with practical projects based on recent research articles.",
    "url": "https://github.com/Amir-Hofo/AI_in_Biomedical_Data",
    "stars": 5,
    "daily_stars": 1,
    "language": "Jupyter Notebook",
    "topics": [
      "5-finger-classification",
      "artificial-intelligence",
      "depthwise-convolutions",
      "diabetes-prediction",
      "ecg-arrhytmia-detection",
      "ecg-signal",
      "eegnet",
      "ensemble-learning",
      "machine-learning",
      "matplotlib",
      "mit-bih-database",
      "motor-imagery",
      "numpy",
      "pandas",
      "pytorch",
      "random-forest",
      "scikit-learn",
      "separable-convolution",
      "svm"
    ],
    "created_at": "2024-12-29T07:38:20",
    "updated_at": "2025-01-23T09:57:39"
  },
  {
    "name": "ollama_agent_examples",
    "full_name": "tmcgirr/ollama_agent_examples",
    "description": "Single Agent and Multi-Agent Systems using Ollama",
    "url": "https://github.com/tmcgirr/ollama_agent_examples",
    "stars": 2,
    "daily_stars": 1,
    "language": "Python",
    "topics": [
      "agent",
      "artificial-intelligence",
      "llm",
      "ollama"
    ],
    "created_at": "2025-01-21T01:08:05",
    "updated_at": "2025-01-23T11:27:06"
  },
  {
    "name": "pentagi",
    "full_name": "vxcontrol/pentagi",
    "description": "‚ú® Fully autonomous AI Agents system capable of performing complex penetration testing tasks",
    "url": "https://github.com/vxcontrol/pentagi",
    "stars": 60,
    "daily_stars": 1,
    "language": "Go",
    "topics": [
      "ai-agents",
      "ai-security-tool",
      "anthropic",
      "autonomous-agents",
      "golang",
      "gpt",
      "graphql",
      "multi-agent-system",
      "offensive-security",
      "open-source",
      "openai",
      "penetration-testing",
      "penetration-testing-tools",
      "react",
      "security-automation",
      "security-testing",
      "security-tools",
      "self-hosted"
    ],
    "created_at": "2025-01-06T22:22:48",
    "updated_at": "2025-01-23T11:58:53"
  }
]