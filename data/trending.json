[
  {
    "name": "titans-pytorch",
    "full_name": "lucidrains/titans-pytorch",
    "description": "Unofficial implementation of Titans, SOTA memory for transformers, in Pytorch",
    "url": "https://github.com/lucidrains/titans-pytorch",
    "stars": 882,
    "daily_stars": 4,
    "language": "Python",
    "topics": [
      "artificial-intelligence",
      "deep-learning",
      "long-term-memory",
      "neural-memory"
    ],
    "created_at": "2025-01-08T15:26:27",
    "updated_at": "2025-01-25T19:26:05"
  },
  {
    "name": "WebWalker",
    "full_name": "Alibaba-NLP/WebWalker",
    "description": "üåê WebWalker: Benchmarking LLMs in Web Traversal",
    "url": "https://github.com/Alibaba-NLP/WebWalker",
    "stars": 246,
    "daily_stars": 3,
    "language": "Python",
    "topics": [
      "agent",
      "alibaba",
      "artificial-intelligence",
      "information-seeking",
      "llm",
      "multi-agent",
      "rag",
      "web-agent"
    ],
    "created_at": "2025-01-09T11:07:35",
    "updated_at": "2025-01-25T19:53:59"
  },
  {
    "name": "Solana-AI-Agent-DApp",
    "full_name": "soladity/Solana-AI-Agent-DApp",
    "description": "AI Agent built on Solana Blockchain",
    "url": "https://github.com/soladity/Solana-AI-Agent-DApp",
    "stars": 112,
    "daily_stars": 2,
    "language": "TypeScript",
    "topics": [
      "ai",
      "ai-agents",
      "blockchain",
      "social-network",
      "solana"
    ],
    "created_at": "2025-01-23T17:24:40",
    "updated_at": "2025-01-25T17:13:25"
  },
  {
    "name": "Neocadmium",
    "full_name": "softwares-compound/Neocadmium",
    "description": "Smart log analysis and debugging assistant for backend developers",
    "url": "https://github.com/softwares-compound/Neocadmium",
    "stars": 25,
    "daily_stars": 1,
    "language": "Makefile",
    "topics": [
      "application-monitoring",
      "artificial-intelligence",
      "developer-tools",
      "electronjs",
      "error-handling",
      "fastapi",
      "graphdb",
      "graphql",
      "graphrag",
      "llamaindex",
      "log",
      "sqlite",
      "tree-sitter"
    ],
    "created_at": "2025-01-14T11:51:35",
    "updated_at": "2025-01-25T17:33:17"
  },
  {
    "name": "mario-party-finder",
    "full_name": "WillKirkmanM/mario-party-finder",
    "description": "18 Layered Convolutional Neural Network to Predict Any Mario Party Minigame with 100% Accuracy",
    "url": "https://github.com/WillKirkmanM/mario-party-finder",
    "stars": 4,
    "daily_stars": 1,
    "language": "Python",
    "topics": [
      "artificial-intelligence",
      "convolutional-neural-networks",
      "mario-party"
    ],
    "created_at": "2025-01-19T12:44:01",
    "updated_at": "2025-01-25T16:43:44"
  },
  {
    "name": "pentagi",
    "full_name": "vxcontrol/pentagi",
    "description": "‚ú® Fully autonomous AI Agents system capable of performing complex penetration testing tasks",
    "url": "https://github.com/vxcontrol/pentagi",
    "stars": 63,
    "daily_stars": 1,
    "language": "Go",
    "topics": [
      "ai-agents",
      "ai-security-tool",
      "anthropic",
      "autonomous-agents",
      "golang",
      "gpt",
      "graphql",
      "multi-agent-system",
      "offensive-security",
      "open-source",
      "openai",
      "penetration-testing",
      "penetration-testing-tools",
      "react",
      "security-automation",
      "security-testing",
      "security-tools",
      "self-hosted"
    ],
    "created_at": "2025-01-06T22:22:48",
    "updated_at": "2025-01-25T19:09:33"
  },
  {
    "name": "AgenticFleet",
    "full_name": "Qredence/AgenticFleet",
    "description": "Adaptive Agentic AI Reasoning That Empower, Inform, and Integrate Seamlessly. Join the Discord for suggestion or support !  https://discord.gg/ebgy7gtZHK",
    "url": "https://github.com/Qredence/AgenticFleet",
    "stars": 20,
    "daily_stars": 1,
    "language": "Python",
    "topics": [
      "agentic-ai",
      "agents",
      "ai",
      "ai-agents",
      "autogen",
      "autogen-sample",
      "chainlit",
      "code-interpreter",
      "graph",
      "magentic-one"
    ],
    "created_at": "2024-12-29T04:38:23",
    "updated_at": "2025-01-25T20:30:38"
  },
  {
    "name": "adaptive-classifier",
    "full_name": "codelion/adaptive-classifier",
    "description": "A flexible, adaptive classification system for dynamic text classification",
    "url": "https://github.com/codelion/adaptive-classifier",
    "stars": 50,
    "daily_stars": 1,
    "language": "Python",
    "topics": [
      "adaptive-learning",
      "adaptive-neural-network",
      "bert",
      "classifier",
      "continous-learning",
      "distilbert",
      "elastic-weight-consolidation",
      "embeddings",
      "faiss",
      "large-language-models",
      "llms",
      "machine-learning",
      "multi-class-classification",
      "multi-label-classification",
      "neural-layers",
      "neural-networks",
      "online-learning",
      "roberta",
      "text-classification",
      "transformers"
    ],
    "created_at": "2025-01-12T22:49:54",
    "updated_at": "2025-01-25T19:29:14"
  },
  {
    "name": "safwaText",
    "full_name": "OussamaBenSlama/safwaText",
    "description": "safwaText is a Python package designed to clean, stem, and transform Arabic text with ease.",
    "url": "https://github.com/OussamaBenSlama/safwaText",
    "stars": 3,
    "daily_stars": 1,
    "language": "Python",
    "topics": [
      "machine-learning",
      "nlp",
      "nlp-machine-learning",
      "python"
    ],
    "created_at": "2025-01-23T17:59:01",
    "updated_at": "2025-01-25T16:43:17"
  },
  {
    "name": "async_torchwindow",
    "full_name": "loryruta/async_torchwindow",
    "description": "An async window to visualize an Image tensor or a Gaussian Splatting scene",
    "url": "https://github.com/loryruta/async_torchwindow",
    "stars": 12,
    "daily_stars": 1,
    "language": "Cuda",
    "topics": [
      "deep-learning",
      "gaussian-splatting",
      "image-processing",
      "pytorch"
    ],
    "created_at": "2025-01-22T20:32:25",
    "updated_at": "2025-01-25T16:59:34"
  }
]