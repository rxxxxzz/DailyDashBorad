[
  {
    "name": "YuE",
    "full_name": "multimodal-art-projection/YuE",
    "description": "YuE: Open Full-song Music Generation Foundation Model, something similar to Suno.ai but open",
    "url": "https://github.com/multimodal-art-projection/YuE",
    "stars": 3473,
    "daily_stars": 10,
    "language": "Python",
    "topics": [
      "agi",
      "ai",
      "artificial-intelligence",
      "deep-learning",
      "foundation-models",
      "llm",
      "music-generation"
    ],
    "created_at": "2025-01-23T06:21:58",
    "updated_at": "2025-02-11T04:19:24"
  },
  {
    "name": "FlashLearn",
    "full_name": "Pravko-Solutions/FlashLearn",
    "description": "Light weight libary for integrating agents and LLMs in your existing workflows.",
    "url": "https://github.com/Pravko-Solutions/FlashLearn",
    "stars": 430,
    "daily_stars": 4,
    "language": "Python",
    "topics": [
      "ai",
      "ai-agents",
      "concurrency",
      "llm",
      "llm-agent",
      "python"
    ],
    "created_at": "2025-01-16T15:19:55",
    "updated_at": "2025-02-11T04:00:23"
  },
  {
    "name": "focalcodec",
    "full_name": "lucadellalib/focalcodec",
    "description": "A low-bitrate single-codebook 16 kHz speech codec based on focal modulation",
    "url": "https://github.com/lucadellalib/focalcodec",
    "stars": 40,
    "daily_stars": 3,
    "language": "Python",
    "topics": [
      "codec",
      "deep-learning",
      "focal-modulation",
      "neural-speech-coding",
      "pytorch",
      "speech-synthesis",
      "vector-quantization",
      "vocos",
      "wavlm"
    ],
    "created_at": "2025-02-03T09:03:40",
    "updated_at": "2025-02-11T03:59:20"
  },
  {
    "name": "hl-gauss-pytorch",
    "full_name": "lucidrains/hl-gauss-pytorch",
    "description": "The proposed Gaussian Histogram Loss (HL-Gauss) proposed by Imani et al. with a few convenient wrappers for regression, in Pytorch",
    "url": "https://github.com/lucidrains/hl-gauss-pytorch",
    "stars": 49,
    "daily_stars": 1,
    "language": "Python",
    "topics": [
      "artificial-intelligence",
      "deep-learning",
      "regression-as-classification",
      "reinforcement-learning"
    ],
    "created_at": "2025-02-06T17:04:44",
    "updated_at": "2025-02-11T03:34:33"
  },
  {
    "name": "improving-transformers-world-model-for-rl",
    "full_name": "lucidrains/improving-transformers-world-model-for-rl",
    "description": "Implementation of the new SOTA for model based RL, from the paper \"Improving Transformer World Models for Data-Efficient RL\", in Pytorch",
    "url": "https://github.com/lucidrains/improving-transformers-world-model-for-rl",
    "stars": 35,
    "daily_stars": 1,
    "language": null,
    "topics": [
      "artificial-intelligence",
      "attention-mechanism",
      "deep-learning",
      "model-based-reinforcement-learning",
      "transformers",
      "world-models"
    ],
    "created_at": "2025-02-09T15:00:51",
    "updated_at": "2025-02-11T02:37:31"
  },
  {
    "name": "solana-ai-agent",
    "full_name": "kratos-te/solana-ai-agent",
    "description": "AI agent connect on Solana using langchain",
    "url": "https://github.com/kratos-te/solana-ai-agent",
    "stars": 100,
    "daily_stars": 1,
    "language": "TypeScript",
    "topics": [
      "ai-agent",
      "ai-agents",
      "langchain",
      "langchain-js",
      "solana-ai-agent"
    ],
    "created_at": "2025-01-22T06:02:50",
    "updated_at": "2025-02-11T04:08:26"
  },
  {
    "name": "mcp-batchit",
    "full_name": "ryanjoachim/mcp-batchit",
    "description": "ðŸš€ MCP aggregator for batching multiple tool calls into a single request. Reduces overhead, saves tokens, and simplifies complex operations in AI agent workflows.",
    "url": "https://github.com/ryanjoachim/mcp-batchit",
    "stars": 12,
    "daily_stars": 1,
    "language": "JavaScript",
    "topics": [
      "ai-agents",
      "ai-tools",
      "automation",
      "batch-processing",
      "developer-tools",
      "llm-tools",
      "mcp",
      "model-context-protocol"
    ],
    "created_at": "2025-01-28T00:23:26",
    "updated_at": "2025-02-11T03:21:15"
  },
  {
    "name": "local-rag-researcher-deepseek",
    "full_name": "kaymen99/local-rag-researcher-deepseek",
    "description": "Local RAG researcher agent built using Langgraph, DeepSeek R1 and Ollama",
    "url": "https://github.com/kaymen99/local-rag-researcher-deepseek",
    "stars": 12,
    "daily_stars": 1,
    "language": "Python",
    "topics": [
      "ai-agents",
      "deepseek-r1",
      "langchain",
      "langgraph",
      "ollama",
      "rag",
      "rag-agents",
      "research-assistant"
    ],
    "created_at": "2025-02-06T23:31:15",
    "updated_at": "2025-02-11T02:09:14"
  },
  {
    "name": "stable-flow",
    "full_name": "snap-research/stable-flow",
    "description": "Official implementation for \"Stable Flow: Vital Layers for Training-Free Image Editing\"",
    "url": "https://github.com/snap-research/stable-flow",
    "stars": 214,
    "daily_stars": 1,
    "language": "Python",
    "topics": [
      "deep-learning",
      "diffusion-models",
      "flow-models",
      "generative-ai",
      "image-editing",
      "machine-learning",
      "text-to-image"
    ],
    "created_at": "2025-01-22T21:15:04",
    "updated_at": "2025-02-11T03:10:08"
  },
  {
    "name": "Real-Time-Smoke-Fire-Detection-YOLO11",
    "full_name": "sayedgamal99/Real-Time-Smoke-Fire-Detection-YOLO11",
    "description": "Flare Guard is an AI-powered system designed to instantly detect and report fires and smoke.",
    "url": "https://github.com/sayedgamal99/Real-Time-Smoke-Fire-Detection-YOLO11",
    "stars": 2,
    "daily_stars": 1,
    "language": "Python",
    "topics": [
      "ai",
      "deep-learning",
      "machine-learning",
      "public-safety",
      "telegram-bot",
      "yolo11"
    ],
    "created_at": "2025-01-13T19:52:59",
    "updated_at": "2025-02-11T02:52:18"
  }
]