[
  {
    "name": "VVQuest",
    "full_name": "DanielZhangyc/VVQuest",
    "description": "智能检索张维为表情包",
    "url": "https://github.com/DanielZhangyc/VVQuest",
    "stars": 698,
    "daily_stars": 7,
    "language": "Python",
    "topics": [
      "artificial-intelligence",
      "embeddings-word2vec",
      "python",
      "streamlit",
      "streamlit-webapp"
    ],
    "created_at": "2025-02-11T13:28:11",
    "updated_at": "2025-02-25T08:41:53"
  },
  {
    "name": "ai-guide",
    "full_name": "liyupi/ai-guide",
    "description": "鱼皮的 AI 知识库",
    "url": "https://github.com/liyupi/ai-guide",
    "stars": 95,
    "daily_stars": 3,
    "language": "Vue",
    "topics": [
      "ai",
      "algorithm",
      "artificial-intelligence",
      "chatgpt",
      "deep-learning",
      "deepseek",
      "deepseek-r1",
      "generative-ai",
      "gpt",
      "llm",
      "openai",
      "python",
      "vue",
      "vuepress"
    ],
    "created_at": "2025-02-13T05:47:46",
    "updated_at": "2025-02-25T08:18:30"
  },
  {
    "name": "yolo-tonic",
    "full_name": "jordandelbar/yolo-tonic",
    "description": "Webcam video stream with real-time YOLO object detection, built with Ort, Tonic and Axum.",
    "url": "https://github.com/jordandelbar/yolo-tonic",
    "stars": 30,
    "daily_stars": 3,
    "language": "Rust",
    "topics": [
      "axum",
      "machine-learning",
      "ort",
      "rust",
      "tonic",
      "video-processing",
      "yolov8"
    ],
    "created_at": "2025-02-14T13:26:06",
    "updated_at": "2025-02-25T06:06:52"
  },
  {
    "name": "native-sparse-attention-pytorch",
    "full_name": "lucidrains/native-sparse-attention-pytorch",
    "description": "Implementation of the sparse attention pattern proposed by the Deepseek team in their \"Native Sparse Attention\" paper",
    "url": "https://github.com/lucidrains/native-sparse-attention-pytorch",
    "stars": 456,
    "daily_stars": 2,
    "language": "Python",
    "topics": [
      "artificial-intelligence",
      "attention",
      "deep-learning"
    ],
    "created_at": "2025-02-19T03:37:52",
    "updated_at": "2025-02-25T08:21:23"
  },
  {
    "name": "improving-transformers-world-model-for-rl",
    "full_name": "lucidrains/improving-transformers-world-model-for-rl",
    "description": "Implementation of the new SOTA for model based RL, from the paper \"Improving Transformer World Models for Data-Efficient RL\", in Pytorch",
    "url": "https://github.com/lucidrains/improving-transformers-world-model-for-rl",
    "stars": 62,
    "daily_stars": 1,
    "language": null,
    "topics": [
      "artificial-intelligence",
      "attention-mechanism",
      "deep-learning",
      "model-based-reinforcement-learning",
      "transformers",
      "world-models"
    ],
    "created_at": "2025-02-09T15:00:51",
    "updated_at": "2025-02-25T07:21:31"
  },
  {
    "name": "ai-gateway",
    "full_name": "wx-yz/ai-gateway",
    "description": "Developer focused AI Gateway",
    "url": "https://github.com/wx-yz/ai-gateway",
    "stars": 7,
    "daily_stars": 1,
    "language": "Ballerina",
    "topics": [
      "ai",
      "ai-gateway",
      "artificial-intelligence",
      "docker",
      "llms"
    ],
    "created_at": "2025-02-14T01:52:54",
    "updated_at": "2025-02-25T05:09:15"
  },
  {
    "name": "mlflow-txtai",
    "full_name": "neuml/mlflow-txtai",
    "description": "MLflow automatic tracing for txtai",
    "url": "https://github.com/neuml/mlflow-txtai",
    "stars": 4,
    "daily_stars": 1,
    "language": "Python",
    "topics": [
      "ai",
      "artificial-intelligence",
      "machine-learning",
      "mlflow",
      "nlp",
      "python",
      "search",
      "txtai"
    ],
    "created_at": "2025-02-24T18:36:14",
    "updated_at": "2025-02-25T04:53:03"
  },
  {
    "name": "agent-leaderboard",
    "full_name": "rungalileo/agent-leaderboard",
    "description": "Ranking LLMs on agentic tasks",
    "url": "https://github.com/rungalileo/agent-leaderboard",
    "stars": 78,
    "daily_stars": 1,
    "language": "Jupyter Notebook",
    "topics": [
      "ai",
      "ai-agents",
      "ai-evaluation",
      "evaluation",
      "llms"
    ],
    "created_at": "2025-02-10T13:49:20",
    "updated_at": "2025-02-25T08:10:58"
  },
  {
    "name": "ai-web-scraper",
    "full_name": "kaymen99/ai-web-scraper",
    "description": "AI web scraper built with Crawl4AI for extracting structured leads data from websites.",
    "url": "https://github.com/kaymen99/ai-web-scraper",
    "stars": 11,
    "daily_stars": 1,
    "language": "Python",
    "topics": [
      "ai-agents",
      "ai-scraping",
      "crawl4ai",
      "lead-generation",
      "llms",
      "scraper",
      "web-scraper",
      "web-scraping"
    ],
    "created_at": "2025-02-11T00:37:54",
    "updated_at": "2025-02-25T08:29:10"
  },
  {
    "name": "ReAct-AI-Agent-from-Scratch-using-DeepSeek",
    "full_name": "Wencho8/ReAct-AI-Agent-from-Scratch-using-DeepSeek",
    "description": "ReAct AI Agent from Scratch using DeepSeek: Handling Memory & Tools without Frameworks",
    "url": "https://github.com/Wencho8/ReAct-AI-Agent-from-Scratch-using-DeepSeek",
    "stars": 5,
    "daily_stars": 1,
    "language": "Python",
    "topics": [
      "ai-agents",
      "deepseek",
      "machine-learning",
      "transformers"
    ],
    "created_at": "2025-02-16T23:31:39",
    "updated_at": "2025-02-25T06:07:18"
  }
]